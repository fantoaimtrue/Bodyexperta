[
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "config",
        "importPath": "decouple",
        "description": "decouple",
        "isExtraImport": true,
        "detail": "decouple",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "static",
        "importPath": "django.conf.urls.static",
        "description": "django.conf.urls.static",
        "isExtraImport": true,
        "detail": "django.conf.urls.static",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "Gallery",
        "importPath": "main_page.models",
        "description": "main_page.models",
        "isExtraImport": true,
        "detail": "main_page.models",
        "documentation": {}
    },
    {
        "label": "Services",
        "importPath": "main_page.models",
        "description": "main_page.models",
        "isExtraImport": true,
        "detail": "main_page.models",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "ZipFile",
        "importPath": "zipfile",
        "description": "zipfile",
        "isExtraImport": true,
        "detail": "zipfile",
        "documentation": {}
    },
    {
        "label": "BadZipFile",
        "importPath": "zipfile",
        "description": "zipfile",
        "isExtraImport": true,
        "detail": "zipfile",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "Bodyexperta.asgi",
        "description": "Bodyexperta.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "Bodyexperta.asgi",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "Bodyexperta.settings",
        "description": "Bodyexperta.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = config('SECRET_KEY', default='your-default-secret-key')\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = config('DEBUG', default=False, cast=bool)\nALLOWED_HOSTS = ['*']\n# Application definition\nINSTALLED_APPS = [",
        "detail": "Bodyexperta.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "Bodyexperta.settings",
        "description": "Bodyexperta.settings",
        "peekOfCode": "SECRET_KEY = config('SECRET_KEY', default='your-default-secret-key')\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = config('DEBUG', default=False, cast=bool)\nALLOWED_HOSTS = ['*']\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',",
        "detail": "Bodyexperta.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "Bodyexperta.settings",
        "description": "Bodyexperta.settings",
        "peekOfCode": "DEBUG = config('DEBUG', default=False, cast=bool)\nALLOWED_HOSTS = ['*']\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',",
        "detail": "Bodyexperta.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "Bodyexperta.settings",
        "description": "Bodyexperta.settings",
        "peekOfCode": "ALLOWED_HOSTS = ['*']\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'main_page',",
        "detail": "Bodyexperta.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "Bodyexperta.settings",
        "description": "Bodyexperta.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'main_page',\n]\nMIDDLEWARE = [",
        "detail": "Bodyexperta.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "Bodyexperta.settings",
        "description": "Bodyexperta.settings",
        "peekOfCode": "MIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\nROOT_URLCONF = 'Bodyexperta.urls'",
        "detail": "Bodyexperta.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "Bodyexperta.settings",
        "description": "Bodyexperta.settings",
        "peekOfCode": "ROOT_URLCONF = 'Bodyexperta.urls'\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [BASE_DIR / 'templates'],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',",
        "detail": "Bodyexperta.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "Bodyexperta.settings",
        "description": "Bodyexperta.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [BASE_DIR / 'templates'],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',",
        "detail": "Bodyexperta.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "Bodyexperta.settings",
        "description": "Bodyexperta.settings",
        "peekOfCode": "WSGI_APPLICATION = 'Bodyexperta.wsgi.application'\n# Database\n# https://docs.djangoproject.com/en/4.2/ref/settings/#databases\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.postgresql',\n        'NAME': config('DB_NAME'),\n        'USER': config('DB_USER'),\n        'PASSWORD': config('DB_PASSWORD'),\n        'HOST': config('DB_HOST'),  # or your server's ip address",
        "detail": "Bodyexperta.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "Bodyexperta.settings",
        "description": "Bodyexperta.settings",
        "peekOfCode": "DATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.postgresql',\n        'NAME': config('DB_NAME'),\n        'USER': config('DB_USER'),\n        'PASSWORD': config('DB_PASSWORD'),\n        'HOST': config('DB_HOST'),  # or your server's ip address\n        'PORT': config('DB_PORT', default='5432'),\n    }\n}",
        "detail": "Bodyexperta.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "Bodyexperta.settings",
        "description": "Bodyexperta.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': (\n            'django.contrib.auth.password_validation.'\n            'UserAttributeSimilarityValidator'\n        ),\n    },\n    {\n        'NAME': (\n            'django.contrib.auth.password_validation.'",
        "detail": "Bodyexperta.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "Bodyexperta.settings",
        "description": "Bodyexperta.settings",
        "peekOfCode": "LANGUAGE_CODE = 'ru'\nTIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\nCORS_ALLOWED_ORIGINS = [\n    'http://127.0.0.1:8000',\n    'https://bodyexp.ru',\n]",
        "detail": "Bodyexperta.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "Bodyexperta.settings",
        "description": "Bodyexperta.settings",
        "peekOfCode": "TIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\nCORS_ALLOWED_ORIGINS = [\n    'http://127.0.0.1:8000',\n    'https://bodyexp.ru',\n]\nSTATIC_URL = '/static/'\nSTATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')  # Для собранных файлов",
        "detail": "Bodyexperta.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "Bodyexperta.settings",
        "description": "Bodyexperta.settings",
        "peekOfCode": "USE_I18N = True\nUSE_TZ = True\nCORS_ALLOWED_ORIGINS = [\n    'http://127.0.0.1:8000',\n    'https://bodyexp.ru',\n]\nSTATIC_URL = '/static/'\nSTATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')  # Для собранных файлов\nSTATICFILES_DIRS = [\n    os.path.join(BASE_DIR, 'static'),  # Для исходных",
        "detail": "Bodyexperta.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "Bodyexperta.settings",
        "description": "Bodyexperta.settings",
        "peekOfCode": "USE_TZ = True\nCORS_ALLOWED_ORIGINS = [\n    'http://127.0.0.1:8000',\n    'https://bodyexp.ru',\n]\nSTATIC_URL = '/static/'\nSTATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')  # Для собранных файлов\nSTATICFILES_DIRS = [\n    os.path.join(BASE_DIR, 'static'),  # Для исходных\n]",
        "detail": "Bodyexperta.settings",
        "documentation": {}
    },
    {
        "label": "CORS_ALLOWED_ORIGINS",
        "kind": 5,
        "importPath": "Bodyexperta.settings",
        "description": "Bodyexperta.settings",
        "peekOfCode": "CORS_ALLOWED_ORIGINS = [\n    'http://127.0.0.1:8000',\n    'https://bodyexp.ru',\n]\nSTATIC_URL = '/static/'\nSTATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')  # Для собранных файлов\nSTATICFILES_DIRS = [\n    os.path.join(BASE_DIR, 'static'),  # Для исходных\n]\nMEDIA_URL = '/media/'",
        "detail": "Bodyexperta.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "Bodyexperta.settings",
        "description": "Bodyexperta.settings",
        "peekOfCode": "STATIC_URL = '/static/'\nSTATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')  # Для собранных файлов\nSTATICFILES_DIRS = [\n    os.path.join(BASE_DIR, 'static'),  # Для исходных\n]\nMEDIA_URL = '/media/'\nMEDIA_ROOT = os.path.join(BASE_DIR, 'mediafiles')\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nCSRF_USE_SESSIONS = False\nCSRF_TRUSTED_ORIGINS = ['http://127.0.0.1:8000', 'https://bodyexp.ru']",
        "detail": "Bodyexperta.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_ROOT",
        "kind": 5,
        "importPath": "Bodyexperta.settings",
        "description": "Bodyexperta.settings",
        "peekOfCode": "STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')  # Для собранных файлов\nSTATICFILES_DIRS = [\n    os.path.join(BASE_DIR, 'static'),  # Для исходных\n]\nMEDIA_URL = '/media/'\nMEDIA_ROOT = os.path.join(BASE_DIR, 'mediafiles')\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nCSRF_USE_SESSIONS = False\nCSRF_TRUSTED_ORIGINS = ['http://127.0.0.1:8000', 'https://bodyexp.ru']",
        "detail": "Bodyexperta.settings",
        "documentation": {}
    },
    {
        "label": "STATICFILES_DIRS",
        "kind": 5,
        "importPath": "Bodyexperta.settings",
        "description": "Bodyexperta.settings",
        "peekOfCode": "STATICFILES_DIRS = [\n    os.path.join(BASE_DIR, 'static'),  # Для исходных\n]\nMEDIA_URL = '/media/'\nMEDIA_ROOT = os.path.join(BASE_DIR, 'mediafiles')\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nCSRF_USE_SESSIONS = False\nCSRF_TRUSTED_ORIGINS = ['http://127.0.0.1:8000', 'https://bodyexp.ru']",
        "detail": "Bodyexperta.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_URL",
        "kind": 5,
        "importPath": "Bodyexperta.settings",
        "description": "Bodyexperta.settings",
        "peekOfCode": "MEDIA_URL = '/media/'\nMEDIA_ROOT = os.path.join(BASE_DIR, 'mediafiles')\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nCSRF_USE_SESSIONS = False\nCSRF_TRUSTED_ORIGINS = ['http://127.0.0.1:8000', 'https://bodyexp.ru']",
        "detail": "Bodyexperta.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_ROOT",
        "kind": 5,
        "importPath": "Bodyexperta.settings",
        "description": "Bodyexperta.settings",
        "peekOfCode": "MEDIA_ROOT = os.path.join(BASE_DIR, 'mediafiles')\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nCSRF_USE_SESSIONS = False\nCSRF_TRUSTED_ORIGINS = ['http://127.0.0.1:8000', 'https://bodyexp.ru']",
        "detail": "Bodyexperta.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "Bodyexperta.settings",
        "description": "Bodyexperta.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nCSRF_USE_SESSIONS = False\nCSRF_TRUSTED_ORIGINS = ['http://127.0.0.1:8000', 'https://bodyexp.ru']",
        "detail": "Bodyexperta.settings",
        "documentation": {}
    },
    {
        "label": "CSRF_USE_SESSIONS",
        "kind": 5,
        "importPath": "Bodyexperta.settings",
        "description": "Bodyexperta.settings",
        "peekOfCode": "CSRF_USE_SESSIONS = False\nCSRF_TRUSTED_ORIGINS = ['http://127.0.0.1:8000', 'https://bodyexp.ru']",
        "detail": "Bodyexperta.settings",
        "documentation": {}
    },
    {
        "label": "CSRF_TRUSTED_ORIGINS",
        "kind": 5,
        "importPath": "Bodyexperta.settings",
        "description": "Bodyexperta.settings",
        "peekOfCode": "CSRF_TRUSTED_ORIGINS = ['http://127.0.0.1:8000', 'https://bodyexp.ru']",
        "detail": "Bodyexperta.settings",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "Bodyexperta.urls",
        "description": "Bodyexperta.urls",
        "peekOfCode": "urlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('main_page.urls', namespace='main_page')),\n]\nurlpatterns += static(settings.MEDIA_URL, document_root=settings.MEDIA_ROOT)\nurlpatterns += static(settings.STATIC_URL, document_root=settings.STATIC_ROOT)",
        "detail": "Bodyexperta.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "Bodyexperta.wsgi",
        "description": "Bodyexperta.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "Bodyexperta.wsgi",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "main_page.migrations.0001_initial",
        "description": "main_page.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Gallery',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('title', models.TextField()),",
        "detail": "main_page.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "main_page.migrations.0002_alter_gallery_description_alter_gallery_image_and_more",
        "description": "main_page.migrations.0002_alter_gallery_description_alter_gallery_image_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('main_page', '0001_initial'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='gallery',\n            name='description',\n            field=models.TextField(verbose_name='Описание'),\n        ),",
        "detail": "main_page.migrations.0002_alter_gallery_description_alter_gallery_image_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "main_page.migrations.0003_services",
        "description": "main_page.migrations.0003_services",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('main_page', '0002_alter_gallery_description_alter_gallery_image_and_more'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Services',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('title', models.TextField(verbose_name='Заголовок')),",
        "detail": "main_page.migrations.0003_services",
        "documentation": {}
    },
    {
        "label": "MainPageConfig",
        "kind": 6,
        "importPath": "main_page.apps",
        "description": "main_page.apps",
        "peekOfCode": "class MainPageConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'main_page'",
        "detail": "main_page.apps",
        "documentation": {}
    },
    {
        "label": "Gallery",
        "kind": 6,
        "importPath": "main_page.models",
        "description": "main_page.models",
        "peekOfCode": "class Gallery(models.Model):\n    title = models.TextField(verbose_name='Заголовок')\n    image = models.ImageField(verbose_name='Изображение')\n    description = models.TextField(verbose_name='Описание')\n    def __str__(self):\n        return self.title\n    class Meta:\n        db_table = 'Галерея'\nclass Services(models.Model):\n    title = models.TextField(verbose_name='Заголовок')",
        "detail": "main_page.models",
        "documentation": {}
    },
    {
        "label": "Services",
        "kind": 6,
        "importPath": "main_page.models",
        "description": "main_page.models",
        "peekOfCode": "class Services(models.Model):\n    title = models.TextField(verbose_name='Заголовок')\n    image = models.ImageField(verbose_name='Изображение')\n    description = models.TextField(verbose_name='Описание')\n    def __str__(self):\n        return self.title\n    class Meta:\n        db_table = 'Сервис'",
        "detail": "main_page.models",
        "documentation": {}
    },
    {
        "label": "app_name",
        "kind": 5,
        "importPath": "main_page.urls",
        "description": "main_page.urls",
        "peekOfCode": "app_name = 'main_page'\nurlpatterns = [\n    path('', main_page, name='main_page'),  # Главная страница\n]",
        "detail": "main_page.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "main_page.urls",
        "description": "main_page.urls",
        "peekOfCode": "urlpatterns = [\n    path('', main_page, name='main_page'),  # Главная страница\n]",
        "detail": "main_page.urls",
        "documentation": {}
    },
    {
        "label": "main_page",
        "kind": 2,
        "importPath": "main_page.views",
        "description": "main_page.views",
        "peekOfCode": "def main_page(request):\n    images = Gallery.objects.all()\n    services = Services.objects.all()\n    context = {\n        \"images\": images,\n        \"services\": services\n    }\n    return render(request, \"main_page/main_page.html\", context)",
        "detail": "main_page.views",
        "documentation": {}
    },
    {
        "label": "extract_file",
        "kind": 2,
        "importPath": "venv.bin.vba_extract",
        "description": "venv.bin.vba_extract",
        "peekOfCode": "def extract_file(xlsm_zip, filename):\n    # Extract a single file from an Excel xlsm macro file.\n    data = xlsm_zip.read(\"xl/\" + filename)\n    # Write the data to a local file.\n    file = open(filename, \"wb\")\n    file.write(data)\n    file.close()\n# The VBA project file and project signature file we want to extract.\nvba_filename = \"vbaProject.bin\"\nvba_signature_filename = \"vbaProjectSignature.bin\"",
        "detail": "venv.bin.vba_extract",
        "documentation": {}
    },
    {
        "label": "vba_filename",
        "kind": 5,
        "importPath": "venv.bin.vba_extract",
        "description": "venv.bin.vba_extract",
        "peekOfCode": "vba_filename = \"vbaProject.bin\"\nvba_signature_filename = \"vbaProjectSignature.bin\"\n# Get the xlsm file name from the commandline.\nif len(sys.argv) > 1:\n    xlsm_file = sys.argv[1]\nelse:\n    print(\n        \"\\nUtility to extract a vbaProject.bin binary from an Excel 2007+ \"\n        \"xlsm macro file for insertion into an XlsxWriter file.\\n\"\n        \"If the macros are digitally signed, extracts also a vbaProjectSignature.bin \"",
        "detail": "venv.bin.vba_extract",
        "documentation": {}
    },
    {
        "label": "vba_signature_filename",
        "kind": 5,
        "importPath": "venv.bin.vba_extract",
        "description": "venv.bin.vba_extract",
        "peekOfCode": "vba_signature_filename = \"vbaProjectSignature.bin\"\n# Get the xlsm file name from the commandline.\nif len(sys.argv) > 1:\n    xlsm_file = sys.argv[1]\nelse:\n    print(\n        \"\\nUtility to extract a vbaProject.bin binary from an Excel 2007+ \"\n        \"xlsm macro file for insertion into an XlsxWriter file.\\n\"\n        \"If the macros are digitally signed, extracts also a vbaProjectSignature.bin \"\n        \"file.\\n\"",
        "detail": "venv.bin.vba_extract",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "manage",
        "description": "manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'Bodyexperta.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "manage",
        "documentation": {}
    }
]